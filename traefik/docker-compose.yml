services:
  traefik:
    image: "traefik:v3.1"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - web
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  nginx:
    image: nginx:latest  # Use the latest Nginx image
    networks:
      - web  # Connect Nginx to the frontend network
    depends_on:
      - sonarqube
      - traefik
    ports:
      - "801:80"  # Expose port 80 on the container to port 8081 on the host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`nginx.local`)"  # Route traffic for nginx.local to this service
      - "traefik.http.routers.nginx.entrypoints=web"

  jenkins:
    image: jenkins/jenkins
    container_name: jenkins
    depends_on:
      - traefik
    networks:
      - web
    # ports:
    #   - 8081:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jenkins.rule=Host(`jenkins.enblitz.com`)"
      - "traefik.http.routers.jenkins.entrypoints=web"
      - "traefik.http.services.jenkins.loadbalancer.server.port=8080"
    volumes:
      - jenkins_home:/var/jenkins_home

  grafana:
    image: grafana/grafana:11.2.0-ubuntu
    container_name: grafana
    depends_on:
      - traefik
    networks:
      - web
    restart: unless-stopped
    # ports:
    #  - '3000:3000'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.enblitz.com`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - sonar-db
      - traefik
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    networks:
      - web
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.rule=Host(`sonar.enblitz.com`)"
      - "traefik.http.routers.sonarqube.entrypoints=web"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"

  sonar-db:
    image: postgres:12
    container_name: sonar-db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    networks:
      - web
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

  jenkins_home:

  gitlab_config:
  gitlab_logs:
  gitlab_data:

# Define networks
networks:
  web:
    external: true
  app:
    external: true
  db:
    external: true